import pygame
successes,fails=pygame.init()
move_right=[pygame.image.load("path/hero/R1.png"), pygame.image.load("path/hero/R2.png"), pygame.image.load("path/hero/R3.png"), pygame.image.load("path/hero/R4.png"), pygame.image.load("path/hero/R5.png"), pygame.image.load("path/hero/R6.png"), pygame.image.load("path/hero/R7.png"), pygame.image.load("path/hero/R8.png"), pygame.image.load("path/hero/R9.png")]
move_left=[pygame.image.load("path/hero/L1.png"), pygame.image.load("path/hero/L2.png"), pygame.image.load("path/hero/L3.png"), pygame.image.load("path/hero/L4.png"), pygame.image.load("path/hero/L5.png"), pygame.image.load("path/hero/L6.png"), pygame.image.load("path/hero/L7.png"), pygame.image.load("path/hero/L8.png"), pygame.image.load("path/hero/L9.png")]
move_right_monster=[pygame.image.load("path/monster/R1E.png"), pygame.image.load("path/monster/R2E.png"), pygame.image.load("path/monster/R3E.png"), pygame.image.load("path/monster/R4E.png"), pygame.image.load("path/monster/R5E.png"), pygame.image.load("path/monster/R6E.png"), pygame.image.load("path/monster/R7E.png"), pygame.image.load("path/monster/R8E.png"), pygame.image.load("path/monster/R9E.png"), pygame.image.load("path/monster/R10E.png"), pygame.image.load("path/monster/R11E.png")]
move_left_monster=[pygame.image.load("path/monster/L1E.png"), pygame.image.load("path/monster/L2E.png"), pygame.image.load("path/monster/L3E.png"), pygame.image.load("path/monster/L4E.png"), pygame.image.load("path/monster/L5E.png"), pygame.image.load("path/monster/L6E.png"), pygame.image.load("path/monster/L7E.png"), pygame.image.load("path/monster/L8E.png"), pygame.image.load("path/monster/L9E.png"), pygame.image.load("path/monster/L10E.png"), pygame.image.load("path/monster/L11E.png")]
sound1=pygame.mixer.Sound("path/sounds/sounds_bullet.wav")
sound2=pygame.mixer.Sound("path/sounds/sounds_hit.wav")
sound3=pygame.mixer.Sound("path/sounds/sounds_hurt.wav")
sound4=pygame.mixer.Sound("path/sounds/sounds_death.wav")
background=pygame.image.load("path/bg.jpg")
hero=pygame.image.load("path/hero/standing.png")
score=0
screenwidth=800
heightscreen=500
clock=pygame.time.Clock()
screen=pygame.display.set_mode((screenwidth, heightscreen))
pygame.display.set_caption("Game")
red=(209,14,14)
green=(0,255,51)
black=(0,0,0)
white=(255,255,255)
class Hero():
     def __init__(self,x,y,width,height,ground_y):
          self.x=x
          self.y=y
          self.start_x = x
          self.start_y = y
          self.width=width
          self.height=height
          self.left=False
          self.right=False
          self.moves=0
          self.step=4
          self.speed=10
          self.jump = False
          self.ground_y=ground_y
          self.face=True
          self.health=10 
          self.hurt_sound=pygame.mixer.Sound("path/sounds/sounds_hurt.wav")
          self.hitbox=pygame.Rect(self.x+20,self.y+10,self.width-40,self.height-10)
     def graphic(self,screen):
            if not self.face:
              if self.left:
                 screen.blit(move_left[self.moves//2],(self.x,self.y))
                 self.moves+=1
                 if self.moves==18:
                    self.moves=0
              elif self.right:
                   screen.blit(move_right[self.moves//2],(self.x,self.y))
                   self.moves+=1
                   if self.moves==18:
                    self.moves=0
            else:
                 if self.right:
                      screen.blit(move_right[0],(self.x,self.y))
                 else:
                      screen.blit(move_left[0],(self.x,self.y))
            self.hitbox=pygame.Rect(self.x+20, self.y+10, self.width-40, self.height-10)
            pygame.draw.rect(screen, red, (20, 20, 200, 20))
            pygame.draw.rect(screen, green,(20, 20, 20*self.health,20))
     def hit(self):
         self.health-=1
         self.hurt_sound.play()
     def reset(self):
         self.health=10
         self.x=self.start_x
         self.y=self.start_y
         self.jump=False
         self.speed=10
         self.moves=0
class ammo():
    def __init__(self,x,y,r,color,d,step):
        self.x=x
        self.y=y
        self.r=r
        self.color=color
        self.d=d
        self.step=step*d
    def design(self,screen):
        pygame.draw.circle(screen,self.color,(self.x,self.y),self.r)    
class monster():
    def __init__(self,y,width,height):
        self.x=0
        self.y=y
        self.width=width
        self.height=height
        self.step=3
        self.moves=0
        self.hitbox=pygame.Rect(self.x+20, self.y, self.width-30,self.height)
        self.health=5
        self.f=True
        self.direction=1 
    def graphic(self,screen):
        if self.f:
          self.move()
          if self.direction==1:
              screen.blit(move_right_monster[self.moves//2],(self.x,self.y))
          else:
              screen.blit(move_left_monster[self.moves//2],(self.x,self.y))
          self.moves+=1
          if self.moves==22:
              self.moves=0
        pygame.draw.rect(screen,red,(self.hitbox[0],self.hitbox[1]-15,50,10))
        pygame.draw.rect(screen,green,(self.hitbox[0],self.hitbox[1]-15,self.health*10,10))
    def move(self):
        self.x+=self.step*self.direction
        if self.x+self.width>=screenwidth:
            self.direction=-1 
        elif self.x<=0:
            self.direction=1  
        self.hitbox=pygame.Rect(self.x+20,self.y,self.width-30,self.height)
    def hit(self):
       sound2.play()
       self.health-=1
       if self.health<=0:
        self.f=False
        self.hitbox=pygame.Rect(0,0,0,0)
def rest():
    global score,monsters,arr,end,death_sound
    score=0
    monsters=[]
    arr=[]
    end=False
    death_sound=False
    p1.reset()
p1=Hero(600,300,50,50,400)  
monsters=[]  
arr=[]
font=pygame.font.SysFont("comicsans",35,True)   
new_monster=pygame.USEREVENT+1
pygame.time.set_timer(new_monster,1000) 
end=False
death_sound=False
def display():
    global death_sound
    sco=font.render("Score: "+str(score),True,black)
    screen.blit(background,(0,0))
    screen.blit(sco,(600,20))
    if not end:
      p1.graphic(screen)
    for m in monsters:
        m.graphic(screen)
    for i in arr:
        i.design(screen)
    if end:
        if not death_sound:
            sound4.play()
            death_sound=True
        end_font=pygame.font.SysFont("comicsans",60,True)
        end_text=end_font.render("GAME OVER",1,red)
        restart_font=pygame.font.SysFont("comicsans", 30,True)
        restart_text=restart_font.render("Press R to Restart",1,red)
        screen.blit(end_text,(screenwidth//2-150, 150))
        screen.blit(restart_text,(screenwidth//2-100, 250))
    pygame.display.update()
run=True
while run:
    clock.tick(30)
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            pygame.quit()
            exit()
        if event.type==new_monster and not end:
            monsters.append(monster(309,64,64))
        if event.type==pygame.KEYDOWN:
            if event.key==pygame.K_ESCAPE:
                 pygame.quit()
                 exit()
            if event.key==pygame.K_z and not end:
              sound1.play()
              if p1.right:
                  d=1
              else:
                  d=-1
              arr.append(ammo(round(p1.x+p1.width//2),round(p1.y+p1.height//2),5,red,d,10))
            if event.key==pygame.K_r and end:
                rest()
    if not end:
        keys=pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and p1.x-p1.step>=8:
                p1.x-=p1.step
                p1.left=True
                p1.right=False
                p1.face=False
        elif keys[pygame.K_RIGHT]and p1.x+p1.width+p1.step<=screenwidth:
                p1.x+=p1.step
                p1.right=True
                p1.left=False
                p1.face=False
        else:
             p1.face=True
             p1.moves=0      
        if not p1.jump:
           if keys[pygame.K_SPACE]:
                p1.jump=True
        if p1.jump:
             if p1.speed>=-10:    
               z=1
               if p1.speed<0:
                     z=-1
               p1.y-=(p1.speed**2)*0.25*z
               p1.speed-=1
             else:
                  p1.jump=False
                  p1.speed=10
        if p1.y>p1.ground_y:
          p1.y=p1.ground_y
    new_arr=[]
    for bullet in arr:
        hit=False
        for m in monsters:
            if not end and m.hitbox.collidepoint(bullet.x,bullet.y):
                m.hit()
                score+=1
                hit=True
        if not hit:
            bullet.x+=bullet.step
            if 0<bullet.x<screenwidth:
                new_arr.append(bullet)
    arr=new_arr
    new_monsters=[]
    for m in monsters:
        if m.f:
            if not end and m.hitbox.colliderect(p1.hitbox):
                p1.hit()
                score-=5
            else:
                new_monsters.append(m)
    monsters=new_monsters
    if p1.health<=0:
        end=True
    display() 
